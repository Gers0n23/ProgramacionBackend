# Gestión de Productos

## Descripción
Este proyecto es una aplicación web desarrollada con Django para la gestión de productos. Permite administrar productos, categorías, marcas y características, incluyendo una API RESTful para integración con otros sistemas.

## Características
- Gestión completa de productos (CRUD):
  - Código
  - Nombre 
  - Precio
  - Marca
  - Categoría
  - Características
  - Fecha de vencimiento
- Administración de catálogos en Django Admin
- Filtrado de productos
- API RESTful con autenticación JWT
- Interfaz de usuario moderna con diseño responsive

## Requisitos
- Python 3.8+
- Django 5.1+
- django-ninja 1.1.0+

## Instalación
1. Clonar el repositorio:
```bash
git clone [https://github.com/Gers0n23/ti2041-2024/tree/main/evaluaciones/Sumativa4/gestion_productos]
cd gestion-productos
```

2. Crear y activar entorno virtual: 
```bash
python -m venv venv
source venv/bin/activate  # En Windows: venv\Scripts\activate
```

3. Instalar dependencias:
```bash
pip install -r requirements.txt
```

4. Realizar migraciones:
```bash
python manage.py makemigrations
python manage.py migrate
```

5. Crear superusuario:
```bash
python manage.py createsuperuser
# Usuario: admin
# Contraseña: inacap2024 
```

## Uso de la API REST

### Documentación de la API
La documentación detallada de la API está disponible en:
```
http://localhost:8000/api/docs
```

### Autenticación JWT
Para obtener el token de acceso:
```http
POST /api/auth/token
Content-Type: application/json

{
    "username": "admin",
    "password": "inacap2024"
}
```

### Endpoints Disponibles

#### Endpoints Públicos
- `GET /api/categorias` - Lista todas las categorías
- `GET /api/marcas` - Lista todas las marcas
- `GET /api/productos` - Lista todos los productos
  - Filtros: `?marca_id=1` o `?categoria_id=1`
- `GET /api/productos/{codigo}` - Detalle de un producto

#### Endpoints Protegidos (requieren JWT)
- `PATCH /api/productos/{codigo}` - Actualiza un producto
```json
{
    "nombre": "Nuevo nombre",
    "precio": 1999,
    "marca_id": 1
}
```

Para usar endpoints protegidos, incluir en headers:
```
Authorization: Bearer {token}
```

## Estructura del Proyecto
```
GESTION_PRODUCTOS
├── gestion_productos/
│   ├── __init__.py
│   ├── asgi.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
├── productos/
│   ├── api.py           # API endpoints
│   ├── models.py        # Modelos de datos
│   ├── views.py         # Vistas web
│   └── admin.py         # Configuración admin
├── static/
│   └── css/
├── templates/
│   └── productos/
└── manage.py
```

## Seguridad
- Protección CSRF en formularios web
- Autenticación JWT para API
- Validación de datos en formularios y API
- Manejo de permisos basado en grupos de usuario

## Desarrollo y Contribución
1. Crear rama para nuevas características:
```bash
git checkout -b feature/nueva-caracteristica
```

2. Enviar cambios:
```bash
git commit -am "Descripción del cambio"
git push origin feature/nueva-caracteristica
```